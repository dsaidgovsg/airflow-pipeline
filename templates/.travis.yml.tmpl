language: bash

env:
  global:
  - IMAGE_NAME=airflow-pipeline
  - SELF_VERSION={{ self_version }}

matrix:
  include:
{%- for v in versions %}
{%- for airflow in v.airflow %}
{%- for spark in v.spark %}
{%- for hadoop in v.hadoop %}
{%- for python in v.python %}
{%- for sqlalchemy in v.sqlalchemy %}
  - services: docker
    env:
    - AIRFLOW_VERSION={{ airflow }}
    - SPARK_VERSION={{ spark }}
    - HADOOP_VERSION={{ hadoop }}
    - PYTHON_VERSION={{ python }}
    - SQLALCHEMY_VERSION={{ sqlalchemy }}
{%- endfor %}
{%- endfor %}
{%- endfor %}
{%- endfor %}
{%- endfor %}
{%- endfor %}

before_install:
- wget https://github.com/guangie88/tera-cli/releases/download/v0.2.1/tera_linux_amd64 -O tera
- chmod +x tera
- sudo mv tera /usr/local/bin/

script:
# Check applied and template
- cp .travis.yml .travis.yml.backup
- ./templates/apply-vars.sh
- if ! diff .travis.yml .travis.yml.backup; then echo ".travis.yml.tmpl and .travis.yml differs!" && exit 1; fi

# Build image
- PY4J_FILE=$(curl -s https://github.com/apache/spark/tree/v${SPARK_VERSION}/python/lib | grep -oE 'py4j-[^\s]+-src\.zip' | uniq)
- echo "PY4J_FILE - ${PY4J_FILE}"
- TAG_NAME="${SELF_VERSION}_${AIRFLOW_VERSION}_spark-${SPARK_VERSION}_hadoop-${HADOOP_VERSION}_python-${PYTHON_VERSION}_sqlalchemy-${SQLALCHEMY_VERSION}"
- |-
  docker build . -t "${IMAGE_NAME}:${TAG_NAME}" \
    --build-arg "AIRFLOW_VERSION=${AIRFLOW_VERSION}" \
    --build-arg "SPARK_VERSION=${SPARK_VERSION}" \
    --build-arg "HADOOP_VERSION=${HADOOP_VERSION}" \
    --build-arg "PYTHON_VERSION=${PYTHON_VERSION}" \
    --build-arg "SQLALCHEMY_VERSION=${SQLALCHEMY_VERSION}" \
    --build-arg "SPARK_PY4J=python/lib/${PY4J_FILE}"

deploy:
  provider: script
  script: bash push-images.sh
  on:
    branch: master

branches:
  only:
  - master
